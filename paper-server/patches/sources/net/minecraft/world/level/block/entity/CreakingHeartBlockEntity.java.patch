--- a/net/minecraft/world/level/block/entity/CreakingHeartBlockEntity.java
+++ b/net/minecraft/world/level/block/entity/CreakingHeartBlockEntity.java
@@ -138,12 +_,41 @@
     }
 
     private static BlockState updateCreakingState(Level level, BlockState state, BlockPos pos, CreakingHeartBlockEntity creakingHeart) {
+        CreakingHeartState oldState = state.getValue(CreakingHeartBlock.STATE);
+        CreakingHeartState newState;
         if (!CreakingHeartBlock.hasRequiredLogs(state, level, pos) && creakingHeart.creakingInfo == null) {
-            return state.setValue(CreakingHeartBlock.STATE, CreakingHeartState.UPROOTED);
+            newState = CreakingHeartState.UPROOTED;
         } else {
             boolean isNaturalNight = CreakingHeartBlock.isNaturalNight(level);
-            return state.setValue(CreakingHeartBlock.STATE, isNaturalNight ? CreakingHeartState.AWAKE : CreakingHeartState.DORMANT);
-        }
+            newState = isNaturalNight ? CreakingHeartState.AWAKE : CreakingHeartState.DORMANT;
+        }
+        if (oldState != newState && level instanceof ServerLevel serverLevel) {
+
+            // Paper Start - Fire CreakingHeartTransformEvent before changing block
+            org.bukkit.World bukkitWorld = serverLevel.getWorld();
+            org.bukkit.block.Block bukkitBlock = bukkitWorld.getBlockAt(pos.getX(), pos.getY(), pos.getZ());
+            org.bukkit.block.BlockState bukkitOldState = bukkitBlock.getState();
+            net.minecraft.world.level.block.state.BlockState newNmsState = state.setValue(CreakingHeartBlock.STATE, newState);
+            org.bukkit.block.BlockState bukkitNewState = bukkitBlock.getState();
+            bukkitNewState.setBlockData(org.bukkit.craftbukkit.block.data.CraftBlockData.fromData(newNmsState));
+            bukkitNewState.setType(org.bukkit.craftbukkit.util.CraftMagicNumbers.getMaterial(state.getBlock()));
+
+            // Conversion NMS -> API
+            org.bukkit.block.CreakingHeartState apiOldState = org.bukkit.block.CreakingHeartState.valueOf(oldState.name());
+            org.bukkit.block.CreakingHeartState apiNewState = org.bukkit.block.CreakingHeartState.valueOf(newState.name());
+
+            org.bukkit.event.block.CreakingHeartTransformEvent event =
+                new org.bukkit.event.block.CreakingHeartTransformEvent(
+                    bukkitBlock, bukkitOldState, bukkitNewState, apiOldState, apiNewState
+                );
+            if (!event.callEvent() || event.isCancelled()) {
+                return state;
+            }
+            return state.setValue(CreakingHeartBlock.STATE, newState);
+        }
+        return state;
+        // Paper End - Fire CreakingHeartTransformEvent before changing block
+
     }
 
     private double distanceToCreaking() {
@@ -207,6 +_,21 @@
             return null;
         } else {
             Creaking creaking = optional.get();
+
+            // Paper Begin: Fire CreakingHeartProtectorChangeEvent (SPAWN)
+            org.bukkit.World bukkitWorld = level.getWorld();
+            org.bukkit.block.Block bukkitBlock = bukkitWorld.getBlockAt(blockPos.getX(), blockPos.getY(), blockPos.getZ());
+            org.bukkit.entity.LivingEntity bukkitProtector = (org.bukkit.entity.LivingEntity) creaking.getBukkitEntity();
+            org.bukkit.event.block.CreakingHeartProtectorChangeEvent event =
+                new org.bukkit.event.block.CreakingHeartProtectorChangeEvent(
+                    bukkitBlock, bukkitProtector, org.bukkit.event.block.CreakingHeartProtectorChangeEvent.Action.SPAWN
+                );
+            if (!event.callEvent() || event.isCancelled()) {
+                creaking.discard();
+                return null;
+            }
+            // Paper End - Fire CreakingHeartProtectorChangeEvent (SPAWN)
+
             level.gameEvent(creaking, GameEvent.ENTITY_PLACE, creaking.position());
             level.broadcastEntityEvent(creaking, (byte)60);
             creaking.setTransient(blockPos);
@@ -316,6 +_,22 @@
 
     public void removeProtector(@Nullable DamageSource damageSource) {
         if (this.getCreakingProtector().orElse(null) instanceof Creaking creaking) {
+
+            // Paper Begin: Fire CreakingHeartProtectorChangeEvent (REMOVE)
+            if (this.level instanceof ServerLevel serverLevel) {
+                org.bukkit.World bukkitWorld = serverLevel.getWorld();
+                org.bukkit.block.Block bukkitBlock = bukkitWorld.getBlockAt(this.getBlockPos().getX(), this.getBlockPos().getY(), this.getBlockPos().getZ());
+                org.bukkit.entity.LivingEntity bukkitProtector = (org.bukkit.entity.LivingEntity) creaking.getBukkitEntity();
+                org.bukkit.event.block.CreakingHeartProtectorChangeEvent event =
+                    new org.bukkit.event.block.CreakingHeartProtectorChangeEvent(
+                        bukkitBlock, bukkitProtector, org.bukkit.event.block.CreakingHeartProtectorChangeEvent.Action.REMOVE
+                    );
+                if (!event.callEvent() || event.isCancelled()) {
+                    return;
+                }
+            }
+            // Paper End - Fire CreakingHeartProtectorChangeEvent (REMOVE)
+
             if (damageSource == null) {
                 creaking.tearDown();
             } else {
